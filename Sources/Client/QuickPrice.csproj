<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net471</TargetFramework>
    <AssemblyName>QuickPrice</AssemblyName>
    <Description>QuickPrice - Real-time item value display for Tarkov SPT</Description>
    <LangVersion>latest</LangVersion>
    <Nullable>disable</Nullable>
    <Deterministic>true</Deterministic>
  </PropertyGroup>

  <PropertyGroup>
    <TarkovDir Condition=" '$(TarkovDir)' == '' ">D:\Apps\TKFBao\TKFClient.0.16.9.0.40087\</TarkovDir>
    <TarkovDebugDir Condition=" '$(TarkovDebugDir)' == '' ">D:\Apps\TKFBao\TKFClient.0.16.9.0.40087\</TarkovDebugDir>
    <TarkovPluginsSPTDir>$(TarkovDir)BepInEx\plugins\spt\</TarkovPluginsSPTDir>
    <TarkovManagedDir>$(TarkovDir)EscapeFromTarkov_Data\Managed\</TarkovManagedDir>
    <TarkovBepInExCoreDir>$(TarkovDir)BepInEx\core\</TarkovBepInExCoreDir>
  </PropertyGroup>

  <ItemGroup>
    <!-- EFT Game DLLs -->
    <Reference Include="Assembly-CSharp">
      <HintPath>$(TarkovManagedDir)Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="Comfort">
      <HintPath>$(TarkovManagedDir)Comfort.dll</HintPath>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>$(TarkovManagedDir)Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="Sirenix.Serialization">
      <HintPath>$(TarkovManagedDir)Sirenix.Serialization.dll</HintPath>
    </Reference>

    <!-- Unity DLLs -->
    <Reference Include="UnityEngine">
      <HintPath>$(TarkovManagedDir)UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(TarkovManagedDir)UnityEngine.CoreModule.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>$(TarkovManagedDir)UnityEngine.UI.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.InputLegacyModule">
      <HintPath>$(TarkovManagedDir)UnityEngine.InputLegacyModule.dll</HintPath>
    </Reference>

    <!-- BepInEx DLLs -->
    <Reference Include="0Harmony">
      <HintPath>$(TarkovBepInExCoreDir)0Harmony.dll</HintPath>
    </Reference>
    <Reference Include="BepinEx">
      <HintPath>$(TarkovBepInExCoreDir)BepInEx.dll</HintPath>
    </Reference>

    <!-- SPT DLLs -->
    <Reference Include="spt-reflection">
      <HintPath>$(TarkovPluginsSPTDir)spt-reflection.dll</HintPath>
    </Reference>
    <Reference Include="spt-custom">
      <HintPath>$(TarkovPluginsSPTDir)spt-custom.dll</HintPath>
    </Reference>
    <Reference Include="spt-common">
      <HintPath>$(TarkovPluginsSPTDir)spt-common.dll</HintPath>
    </Reference>
  </ItemGroup>

  <!-- Gets the commit hash from git -->
  <Target Name="SetSourceRevisionId" BeforeTargets="InitializeSourceControlInformation">
    <Exec
      Command="git describe --long --always --dirty --exclude=* --abbrev=8"
      ConsoleToMSBuild="True"
      IgnoreExitCode="False"
      >
      <Output PropertyName="SourceRevisionId" TaskParameter="ConsoleOutput"/>
    </Exec>
  </Target>

  <!-- Gets the version property from the VERSION.txt file -->
  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <ItemGroup>
      <VersionFile Include="VERSION.txt" />
      <VersionCs Include="$(ProjectDir)Version.cs" />
      <Compile Include="@(VersionCs)" Exclude="@(VersionCs)" />
      <FileWrites Include="@(VersionCs)" />
    </ItemGroup>

    <ReadLinesFromFile File="@(VersionFile)">
      <Output TaskParameter="Lines" PropertyName="Version" />
    </ReadLinesFromFile>

    <!-- Write the version to Version.cs -->
    <WriteLinesToFile File="@(VersionCs)" Overwrite="true" Lines="// HACK: autogenerated file containing version info from VERSION.txt"/>
    <WriteLinesToFile File="@(VersionCs)" Lines="namespace QuickPrice{public static class BuildInfo {public const string Version = &quot;$(Version)&quot;%3B}}"/>
  </Target>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <ItemGroup>
      <OutputDLL Include="$(ProjectDir)$(OutDir)$(TargetName).dll" />
    </ItemGroup>

    <!-- Copies the output to tarkov game folder -->
    <Copy
      SourceFiles="@(OutputDLL)"
      DestinationFolder="$(TarkovDir)BepInEx\plugins\QuickPrice\"
    />

    <!-- Creates a release zip file -->
    <RemoveDir Directories="$(ProjectDir)release" />
    <Copy
      SourceFiles="@(OutputDLL)"
      DestinationFolder="$(ProjectDir)release\QuickPrice\BepInEx\plugins\QuickPrice\"
    />
    <ZipDirectory
      SourceDirectory="$(ProjectDir)release\QuickPrice\"
      DestinationFile="$(ProjectDir)release\QuickPrice-$(Version)-$(SourceRevisionId).zip"
    />
  </Target>

</Project>
